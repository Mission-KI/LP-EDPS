name: Release

on:
    push:
        tags: "*"

env:
    OPENAPI_SCHEMA: edps_openapi_${{ github.ref_name }}.json
    WHEEL_NAME: edps.whl
    LICENSES_ARTIFACT_NAME: licenses.csv
    CONFIG_README_ARTIFACT_NAME: config_readme.md
    PIP_EXTRA_INDEX_URL: https://download.pytorch.org/whl/cpu

jobs:
    build_wheel:
        runs-on: ubuntu-24.04
        name: Build Release Wheel
        outputs:
            wheel-artifact: ${{ steps.build.outputs.wheel-artifact-name }}
        steps:
        -   uses: actions/checkout@v4
            with:
                lfs: true
        -   id: build
            uses: beebucket/build-wheel-action@v1

    generate_schemas:
        runs-on: ubuntu-24.04
        name: Generate Schemata
        needs:
        -   build_wheel
        steps:
        -   uses: actions/checkout@v4
        -   uses: actions/setup-python@v5
            with:
                python-version-file: '.python-version'
                cache: 'pip'
        -   uses: actions/download-artifact@v4
            id: download_wheel
            with:
                name: ${{ needs.build_wheel.outputs.wheel-artifact }}
                path: ${{ github.workspace }}
        -   name: Install
            run: |
                pip install ${{ steps.download_wheel.outputs.download-path }}
        -   name: Generate OpenAPI Schema
            run: edps_export_openapi_schema --output ${{ env.OPENAPI_SCHEMA }}
        -   uses: actions/upload-artifact@v4
            with:
                name: ${{ env.OPENAPI_SCHEMA }}
                path: ${{ env.OPENAPI_SCHEMA }}

    license_report:
        runs-on: ubuntu-24.04
        name: Create License Report
        needs:
        -   build_wheel
        steps:
        -   uses: actions/checkout@v4
        -   uses: actions/setup-python@v5
            with:
                python-version-file: '.python-version'
                cache: 'pip'
        -   uses: actions/download-artifact@v4
            id: download_wheel
            with:
                name: ${{ needs.build_wheel.outputs.wheel-artifact }}
                path: ${{ github.workspace }}
        -   name: Install
            run: |
                pip install ${{ steps.download_wheel.outputs.download-path }}[test]
        -   name: Run pip-licenses
            run: pip-licenses --format=csv --with-url --with-authors --order=license --output-file ${{ env.LICENSES_ARTIFACT_NAME }}
        -   name: Upload License Report
            uses: actions/upload-artifact@v4
            with:
                name: ${{ env.LICENSES_ARTIFACT_NAME }}
                path: ${{ env.LICENSES_ARTIFACT_NAME }}
    
    configuration-readme:
        runs-on: ubuntu-24.04
        name: Create Configuration Readme
        needs:
        -   build_wheel
        steps:
        -   uses: actions/checkout@v4
        -   uses: actions/setup-python@v5
            with:
                python-version-file: '.python-version'
                cache: 'pip'
        -   uses: actions/download-artifact@v4
            id: download_wheel
            with:
                name: ${{ needs.build_wheel.outputs.wheel-artifact }}
                path: ${{ github.workspace }}
        -   name: Install
            run: |
                pip install ${{ steps.download_wheel.outputs.download-path }}[test]
        -   name: Run pydantic markdown generator
            run: pydantic_markdown --model edps.Config --output ${{ env.CONFIG_README_ARTIFACT_NAME }}
        -   name: Upload readme
            uses: actions/upload-artifact@v4
            with:
                name: ${{ env.CONFIG_README_ARTIFACT_NAME }}
                path: ${{ env.CONFIG_README_ARTIFACT_NAME }}

    create_release:
        runs-on: ubuntu-24.04
        name: Create Release
        needs:
        -   build_wheel
        -   generate_schemas
        -   license_report
        -   configuration-readme
        env:
            ARTIFACTS_DIR: "${{ github.workspace }}/release_artifacts"
        steps:
        -   name: Create Directory for artifacts
            run: mkdir -p ${{ env.ARTIFACTS_DIR }}
        -   uses: actions/download-artifact@v4
            with:
                pattern: "!*.dockerbuild"
                path: "${{ env.ARTIFACTS_DIR }}"
        -   name: Release
            uses: softprops/action-gh-release@v2
            with:
                files: ${{ env.ARTIFACTS_DIR }}/*
                fail_on_unmatched_files: true
                draft: true
                generate_release_notes: true
